// Maternal Health Companion Platform - Prisma Schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// NextAuth.js required models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Core application models
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("user") // user, admin, health_worker, clinic
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // NextAuth relations
  accounts Account[]
  sessions Session[]

  // App relations
  profile      Profile?
  bookings     Booking[]
  transactions Transaction[]
}

model Profile {
  id           String    @id @default(cuid())
  userId       String    @unique
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Personal Information
  phone        String?
  address      String?
  dateOfBirth  DateTime?
  gender       String?
  
  // Health Information
  bloodGroup   String?
  genotype     String?
  lastMenstrualPeriod DateTime?
  
  // Medical History
  conditions   String? // JSON string of medical conditions
  allergies    String? // JSON string of allergies
  medications  String? // JSON string of current medications
  
  // Emergency Information
  emergencyContact String?
  emergencyPhone   String?
  emergencyNotes   String?
  
  // Pregnancy Information
  pregnancies      String? // JSON string of pregnancy history
  currentPregnancy Boolean @default(false)
  expectedDueDate  DateTime?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Booking {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Booking Details
  facilityName    String
  facilityType    String // hospital, clinic, lab, pharmacy
  serviceType     String // consultation, checkup, test, scan
  appointmentType String // in-person, virtual
  
  // Scheduling
  appointmentDate DateTime
  appointmentTime String
  duration        Int? // in minutes
  
  // Status and Notes
  status      String @default("pending") // pending, confirmed, completed, cancelled
  notes       String?
  doctorName  String?
  
  // Location (for in-person appointments)
  address     String?
  city        String?
  state       String?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  transactions Transaction[]
}

model Transaction {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  bookingId String?
  booking   Booking? @relation(fields: [bookingId], references: [id], onDelete: SetNull)
  
  // Transaction Details
  amount        Float
  currency      String @default("NGN")
  description   String
  paymentMethod String // card, bank_transfer, cash, mobile_money
  
  // Status
  status        String @default("pending") // pending, completed, failed, refunded
  transactionId String? // External payment provider transaction ID
  
  // Metadata
  metadata      String? // JSON string for additional data
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
